{"version":3,"sources":["utils/time.js","utils/coinGeckoApi.js","components/DateRangeInputs/DateRangeInputs.jsx","components/DateRangeInputs/index.js","utils/format.js","components/Cards/Cards.jsx","components/Cards/index.js","utils/marketAnalyzer.js","components/MarketChart/config.js","components/MarketChart/MarketChart.jsx","components/MarketChart/index.js","logo.svg","App.jsx","index.js"],"names":["toDateInputValue","time","Date","toISOString","slice","BASE_URL","from","to","a","fetch","response","json","data","prices","oneByDate","volumes","total_volumes","forEach","value","utcDate","toUTCString","toUTCDateString","MIN_DATE","DateRangeInputs","startDate","endDate","onStartDateChange","onEndDateChange","className","htmlFor","id","type","min","max","now","onChange","numberWithSpaces","number","toString","replace","Cards","volumesByDate","longestBearishTrend","pricesByDate","trendLength","result","Object","entries","index","array","date","price","MarketAnalyzer","highestTradingVolume","reduce","volume","maximumProfit","buyDate","minimumPrice","sellDate","profit","buyingRecommendation","toFixed","Tooltip","positioners","bottom","items","chart","this","_chart","pos","average","x","y","chartArea","config","datasets","label","backgroundColor","borderColor","pointRadius","segment","ctx","p0","parsed","p1","hoverBackgroundColor","yAxisID","options","interaction","intersect","mode","scales","ticks","autoSkipPadding","maxRotation","position","title","display","text","y2","plugins","legend","color","font","family","weight","size","tooltip","xAlign","yAlign","usePointStyle","caretPadding","callbacks","item","dataset","formattedValue","labelPointStyle","pointStyle","elements","point","hoverRadius","MarketChart","canvasRef","useRef","chartRef","useEffect","current","Chart","maintainAspectRatio","destroy","update","ref","INITIAL_START_TIME","initialDate","setMonth","getMonth","getTime","oneMonthBefore","INITIAL_END_TIME","App","useState","startTime","setStartTime","endTime","setEndTime","setPrices","setVolumes","fetchBitcoinMarketData","then","src","logo","width","height","alt","class","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae82ffdc.chunk.js","sourcesContent":["export function toDateInputValue(time) {\n  return new Date(time).toISOString().slice(0, 10);\n}\n\nexport function toUTCDateString(time) {\n  return new Date(time).toUTCString().slice(5, 16);\n}\n\nexport function oneMonthBefore(time) {\n  const initialDate = new Date(time);\n  initialDate.setMonth(initialDate.getMonth() - 1);\n  return initialDate.getTime();\n}\n","import { toUTCDateString } from './time';\n\nconst BASE_URL =\n  'https://api.coingecko.com/api/v3/coins/bitcoin/market_chart/range';\n\nexport async function fetchBitcoinMarketData(from, to) {\n  const response = await fetch(\n    `${BASE_URL}?vs_currency=eur&from=${from / 1000}&to=${to / 1000 + 3600}`\n  );\n  const data = await response.json();\n\n  return {\n    prices: oneByDate(data.prices),\n    volumes: oneByDate(data.total_volumes),\n  };\n}\n\nfunction oneByDate(data) {\n  const oneByDate = {};\n  data.forEach(([time, value]) => {\n    const utcDate = toUTCDateString(time);\n    oneByDate[utcDate] = oneByDate[utcDate] || value;\n  });\n  return oneByDate;\n}\n","import { toDateInputValue } from '../../utils/time';\nimport './DateRangeInputs.css';\n\nconst MIN_DATE = '2013-04-28';\n\nfunction DateRangeInputs({\n  startDate,\n  endDate,\n  onStartDateChange,\n  onEndDateChange,\n}) {\n  return (\n    <div className=\"date-inputs\">\n      <div className=\"input-group\">\n        <label htmlFor=\"fromInput\">Start date</label>\n        <input\n          id=\"fromInput\"\n          type=\"date\"\n          value={startDate}\n          min={MIN_DATE}\n          max={toDateInputValue(Date.now())}\n          onChange={onStartDateChange}\n        />\n      </div>\n      <div className=\"input-group\">\n        <label htmlFor=\"toInput\">End date</label>\n        <input\n          id=\"toInput\"\n          type=\"date\"\n          value={endDate}\n          min={MIN_DATE}\n          max={toDateInputValue(Date.now())}\n          onChange={onEndDateChange}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default DateRangeInputs;\n","import DateRangeInputs from './DateRangeInputs';\n\nexport default DateRangeInputs;\n","export function numberWithSpaces(number) {\n  return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n}\n","import { numberWithSpaces } from '../../utils/format';\nimport * as MarketAnalyzer from '../../utils/marketAnalyzer';\nimport './Cards.css';\n\nfunction Cards({ prices, volumes }) {\n  const longestBearishTrend = MarketAnalyzer.longestBearishTrend(prices);\n  const highestTradingVolume = MarketAnalyzer.highestTradingVolume(volumes);\n  const maximumProfit = MarketAnalyzer.maximumProfit(prices);\n\n  const buyingRecommendation = maximumProfit.buyDate\n    ? `If bought on ${maximumProfit.buyDate} and sold\n      on ${maximumProfit.sellDate}`\n    : `Bitcoins should not be bought on the selected date range`;\n\n  return (\n    <div className=\"cards\">\n      <div className=\"card\">\n        <h3 className=\"card-title\">Longest bearish trend</h3>\n        <p className=\"card-focal\">{longestBearishTrend.trendLength} days</p>\n        <p>\n          {longestBearishTrend.startDate} - {longestBearishTrend.endDate}\n        </p>\n      </div>\n      <div className=\"card\">\n        <h3 className=\"card-title\">Highest trading volume</h3>\n        <p className=\"card-focal\">\n          {numberWithSpaces(highestTradingVolume.volume.toFixed(0))} €\n        </p>\n        <p>{highestTradingVolume.date}</p>\n      </div>\n      <div className=\"card\">\n        <h3 className=\"card-title\">Maximum profit</h3>\n        <p className=\"card-focal\">\n          {numberWithSpaces(maximumProfit.profit.toFixed(2))} € / BTC\n        </p>\n        <p>{buyingRecommendation}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Cards;\n","import Cards from './Cards';\n\nexport default Cards;\n","export function longestBearishTrend(pricesByDate) {\n  let result = {\n    startDate: null,\n    endDate: null,\n    trendLength: 0,\n  };\n\n  let startDate, endDate, trendLength;\n\n  Object.entries(pricesByDate).forEach(([date, price], index, array) => {\n    if (index === 0 || price >= array[index - 1][1]) {\n      startDate = date;\n      trendLength = 0;\n      return;\n    }\n\n    trendLength++;\n    endDate = date;\n\n    if (trendLength > result.trendLength) {\n      result = {\n        startDate,\n        endDate,\n        trendLength,\n      };\n    }\n  });\n\n  return result;\n}\n\nexport function highestTradingVolume(volumesByDate) {\n  let result = {\n    date: null,\n    volume: 0,\n  };\n\n  function highestVolumeReducer(result, [date, volume]) {\n    return volume > result.volume ? { date, volume } : result;\n  }\n\n  return Object.entries(volumesByDate).reduce(highestVolumeReducer, result);\n}\n\nexport function maximumProfit(pricesByDate) {\n  let result = {\n    buyDate: null,\n    sellDate: null,\n    profit: 0,\n  };\n\n  let buyDate, minimumPrice;\n\n  Object.entries(pricesByDate).forEach(([date, price], index) => {\n    if (index === 0 || price < minimumPrice) {\n      minimumPrice = price;\n      buyDate = date;\n      return;\n    }\n\n    const profit = price - minimumPrice;\n\n    if (profit > result.profit) {\n      result = {\n        buyDate,\n        sellDate: date,\n        profit,\n      };\n    }\n  });\n\n  return result;\n}\n","import { Tooltip } from 'chart.js';\n\nTooltip.positioners.bottom = function (items) {\n  const chart = this._chart;\n  const pos = Tooltip.positioners.average(items);\n\n  return pos\n    ? {\n        x: pos.x,\n        y: chart.chartArea.bottom,\n      }\n    : false;\n};\n\nconst config = {\n  data: {\n    datasets: [\n      {\n        label: 'Price',\n        type: 'line',\n        backgroundColor: 'rgb(242, 169, 0)',\n        borderColor: 'rgb(242, 169, 0)',\n        pointRadius: '0',\n        segment: {\n          borderColor: (ctx) =>\n            ctx.p0.parsed.y < ctx.p1.parsed.y\n              ? 'rgb(0, 255, 0)'\n              : 'rgb(255, 0, 0)',\n        },\n      },\n      {\n        label: 'Volume',\n        backgroundColor: 'rgb(0, 0, 0, 0.2)',\n        hoverBackgroundColor: 'rgb(0, 0, 0, 0.6)',\n        type: 'bar',\n        yAxisID: 'y2',\n      },\n    ],\n  },\n  options: {\n    interaction: {\n      intersect: false,\n      mode: 'index',\n    },\n    scales: {\n      x: {\n        ticks: {\n          autoSkipPadding: 12,\n          maxRotation: 30,\n        },\n      },\n      y: {\n        type: 'linear',\n        position: 'left',\n        title: {\n          display: true,\n          text: 'Price [€ / BTC]',\n        },\n      },\n      y2: {\n        type: 'linear',\n        position: 'right',\n        title: {\n          display: true,\n          text: 'Volume [€]',\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n      title: {\n        display: true,\n        text: 'Daily price and trading volume of Bitcoin',\n        color: 'black',\n        font: {\n          family: '\"Ubuntu\", sans-serif',\n          weight: 'bold',\n          size: 18,\n        },\n      },\n      tooltip: {\n        position: 'bottom',\n        xAlign: 'center',\n        yAlign: 'bottom',\n        usePointStyle: true,\n        caretPadding: 4,\n        callbacks: {\n          label: (item) => `${item.dataset.label} ${item.formattedValue} €`,\n          labelPointStyle: () => ({\n            pointStyle: 'circle',\n            pointRadius: 0,\n          }),\n        },\n      },\n    },\n    elements: {\n      point: {\n        hoverRadius: '6',\n      },\n    },\n  },\n};\n\nexport default config;\n","import './MarketChart.css';\nimport Chart from 'chart.js/auto';\nimport { useEffect, useRef } from 'react';\nimport config from './config';\n\nfunction MarketChart({ pricesByDate, volumesByDate }) {\n  const canvasRef = useRef();\n  const chartRef = useRef();\n\n  useEffect(() => {\n    chartRef.current = new Chart(canvasRef.current, config);\n    chartRef.current.options.maintainAspectRatio = false;\n    return () => chartRef.current.destroy();\n  }, []);\n\n  useEffect(() => {\n    chartRef.current.data.datasets[0].data = pricesByDate;\n    chartRef.current.data.datasets[1].data = volumesByDate;\n    chartRef.current.update();\n  }, [pricesByDate, volumesByDate]);\n\n  return (\n    <div className=\"chart-container\">\n      <canvas ref={canvasRef}></canvas>\n    </div>\n  );\n}\n\nexport default MarketChart;\n","import MarketChart from './MarketChart';\n\nexport default MarketChart;\n","export default __webpack_public_path__ + \"static/media/logo.229e5f10.svg\";","import { useEffect, useState } from 'react';\nimport { fetchBitcoinMarketData } from './utils/coinGeckoApi';\nimport { oneMonthBefore, toDateInputValue } from './utils/time';\nimport DateRangeInputs from './components/DateRangeInputs';\nimport Cards from './components/Cards';\nimport MarketChart from './components/MarketChart';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst INITIAL_START_TIME = oneMonthBefore(Date.now());\nconst INITIAL_END_TIME = Date.now();\n\nfunction App() {\n  const [startTime, setStartTime] = useState(INITIAL_START_TIME);\n  const [endTime, setEndTime] = useState(INITIAL_END_TIME);\n  const [prices, setPrices] = useState([]);\n  const [volumes, setVolumes] = useState([]);\n\n  useEffect(() => {\n    fetchBitcoinMarketData(startTime, endTime).then(({ prices, volumes }) => {\n      setPrices(prices);\n      setVolumes(volumes);\n    });\n  }, [startTime, endTime]);\n\n  const onStartDateChange = (e) =>\n    setStartTime(new Date(e.target.value).getTime() || INITIAL_START_TIME);\n\n  const onEndDateChange = (e) =>\n    setEndTime(new Date(e.target.value).getTime() || INITIAL_END_TIME);\n\n  return (\n    <div>\n      <header className=\"header\">\n        <img src={logo} width=\"60\" height=\"60\" alt=\"Bitcoin Icon\" />\n        <h1>Bitcoin Market Analyzer</h1>\n      </header>\n\n      <main>\n        <h2 class=\"section-title\">The date range to be analyzed</h2>\n        <DateRangeInputs\n          startDate={toDateInputValue(startTime)}\n          endDate={toDateInputValue(endTime)}\n          onStartDateChange={onStartDateChange}\n          onEndDateChange={onEndDateChange}\n        />\n        <Cards prices={prices} volumes={volumes} />\n        <MarketChart pricesByDate={prices} volumesByDate={volumes} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}