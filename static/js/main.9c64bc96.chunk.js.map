{"version":3,"sources":["components/MarketChart/config.js","components/MarketChart/MarketChart.jsx","components/MarketChart/index.js","utils/time.js","utils/coinGeckoApi.js","App.jsx","utils/marketAnalyzer.js","index.js"],"names":["Tooltip","positioners","bottom","items","chart","this","_chart","pos","average","x","y","chartArea","config","data","datasets","label","type","backgroundColor","borderColor","pointRadius","segment","ctx","p0","parsed","p1","hoverBackgroundColor","yAxisID","options","interaction","intersect","mode","scales","ticks","autoSkipPadding","maxRotation","position","title","display","text","y2","plugins","legend","color","font","family","weight","size","tooltip","xAlign","yAlign","usePointStyle","caretPadding","callbacks","item","dataset","formattedValue","labelPointStyle","pointStyle","elements","point","hoverRadius","MarketChart","pricesByDate","volumesByDate","canvasRef","useRef","chartRef","useEffect","current","Chart","maintainAspectRatio","destroy","update","className","ref","toDateInputValue","time","Date","toISOString","slice","BASE_URL","from","to","a","fetch","response","json","prices","oneByDate","volumes","total_volumes","forEach","value","utcDate","toUTCString","toUTCDateString","MIN_DATE","INITIAL_START_TIME","initialDate","setMonth","getMonth","getTime","oneMonthBefore","now","INITIAL_END_TIME","App","useState","startTime","setStartTime","endTime","setEndTime","setPrices","setVolumes","fetchBitcoinMarketData","then","longestBearishTrend","startDate","endDate","trendLength","result","Object","entries","index","array","date","price","MarketAnalyzer","highestTradingVolume","reduce","volume","maximumProfit","buyDate","minimumPrice","sellDate","profit","src","width","height","alt","htmlFor","id","min","max","onChange","e","target","class","toFixed","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c64bc96.chunk.js","sourcesContent":["import { Tooltip } from 'chart.js';\n\nTooltip.positioners.bottom = function (items) {\n  const chart = this._chart;\n  const pos = Tooltip.positioners.average(items);\n\n  return pos\n    ? {\n        x: pos.x,\n        y: chart.chartArea.bottom,\n      }\n    : false;\n};\n\nconst config = {\n  data: {\n    datasets: [\n      {\n        label: 'Price',\n        type: 'line',\n        backgroundColor: 'rgb(242, 169, 0)',\n        borderColor: 'rgb(242, 169, 0)',\n        pointRadius: '0',\n        segment: {\n          borderColor: (ctx) =>\n            ctx.p0.parsed.y < ctx.p1.parsed.y\n              ? 'rgb(0, 255, 0)'\n              : 'rgb(255, 0, 0)',\n        },\n      },\n      {\n        label: 'Volume',\n        backgroundColor: 'rgb(0, 0, 0, 0.2)',\n        hoverBackgroundColor: 'rgb(0, 0, 0, 0.6)',\n        type: 'bar',\n        yAxisID: 'y2',\n      },\n    ],\n  },\n  options: {\n    interaction: {\n      intersect: false,\n      mode: 'index',\n    },\n    scales: {\n      x: {\n        ticks: {\n          autoSkipPadding: 12,\n          maxRotation: 30,\n        },\n      },\n      y: {\n        type: 'linear',\n        position: 'left',\n        title: {\n          display: true,\n          text: 'Price [€ / BTC]',\n        },\n      },\n      y2: {\n        type: 'linear',\n        position: 'right',\n        title: {\n          display: true,\n          text: 'Volume [€]',\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n      title: {\n        display: true,\n        text: 'Daily price and trading volume of Bitcoin',\n        color: 'black',\n        font: {\n          family: '\"Ubuntu\", sans-serif',\n          weight: 'bold',\n          size: 18,\n        },\n      },\n      tooltip: {\n        position: 'bottom',\n        xAlign: 'center',\n        yAlign: 'bottom',\n        usePointStyle: true,\n        caretPadding: 4,\n        callbacks: {\n          label: (item) => `${item.dataset.label} ${item.formattedValue} €`,\n          labelPointStyle: () => ({\n            pointStyle: 'circle',\n            pointRadius: 0,\n          }),\n        },\n      },\n    },\n    elements: {\n      point: {\n        hoverRadius: '6',\n      },\n    },\n  },\n};\n\nexport default config;\n","import './index.css';\nimport Chart from 'chart.js/auto';\nimport { useEffect, useRef } from 'react';\nimport config from './config';\n\nfunction MarketChart({ pricesByDate, volumesByDate }) {\n  const canvasRef = useRef();\n  const chartRef = useRef();\n\n  useEffect(() => {\n    chartRef.current = new Chart(canvasRef.current, config);\n    chartRef.current.options.maintainAspectRatio = false;\n    return () => chartRef.current.destroy();\n  }, []);\n\n  useEffect(() => {\n    chartRef.current.data.datasets[0].data = pricesByDate;\n    chartRef.current.data.datasets[1].data = volumesByDate;\n    chartRef.current.update();\n  }, [pricesByDate, volumesByDate]);\n\n  return (\n    <div className=\"chart-container\">\n      <canvas ref={canvasRef}></canvas>\n    </div>\n  );\n}\n\nexport default MarketChart;\n","import MarketChart from './MarketChart';\n\nexport default MarketChart;\n","export function toDateInputValue(time) {\n  return new Date(time).toISOString().slice(0, 10);\n}\n\nexport function toUTCDateString(time) {\n  return new Date(time).toUTCString().slice(5, 16);\n}\n\nexport function oneMonthBefore(time) {\n  const initialDate = new Date(time);\n  initialDate.setMonth(initialDate.getMonth() - 1);\n  return initialDate.getTime();\n}\n","import { toUTCDateString } from './time';\n\nconst BASE_URL =\n  'https://api.coingecko.com/api/v3/coins/bitcoin/market_chart/range';\n\nexport async function fetchBitcoinMarketData(from, to) {\n  const response = await fetch(\n    `${BASE_URL}?vs_currency=eur&from=${from / 1000}&to=${to / 1000 + 3600}`\n  );\n  const data = await response.json();\n\n  return {\n    prices: oneByDate(data.prices),\n    volumes: oneByDate(data.total_volumes),\n  };\n}\n\nfunction oneByDate(data) {\n  const oneByDate = {};\n  data.forEach(([time, value]) => {\n    const utcDate = toUTCDateString(time);\n    oneByDate[utcDate] = oneByDate[utcDate] || value;\n  });\n  return oneByDate;\n}\n","import './app.css';\nimport { useEffect, useState } from 'react';\nimport MarketChart from './components/MarketChart';\nimport { fetchBitcoinMarketData } from './utils/coinGeckoApi';\nimport { oneMonthBefore, toDateInputValue } from './utils/time';\nimport * as MarketAnalyzer from './utils/marketAnalyzer';\n\nconst MIN_DATE = '2013-04-28';\nconst INITIAL_START_TIME = oneMonthBefore(Date.now());\nconst INITIAL_END_TIME = Date.now();\n\nfunction App() {\n  // Start date of a range as milliseconds\n  const [startTime, setStartTime] = useState(INITIAL_START_TIME);\n  // Ending date of a range as milliseconds\n  const [endTime, setEndTime] = useState(INITIAL_END_TIME);\n\n  const [prices, setPrices] = useState([]);\n  const [volumes, setVolumes] = useState([]);\n\n  useEffect(() => {\n    fetchBitcoinMarketData(startTime, endTime).then(({ prices, volumes }) => {\n      setPrices(prices);\n      setVolumes(volumes);\n    });\n  }, [startTime, endTime]);\n\n  const longestBearishTrend = MarketAnalyzer.longestBearishTrend(prices);\n  const highestTradingVolume = MarketAnalyzer.highestTradingVolume(volumes);\n  const maximumProfit = MarketAnalyzer.maximumProfit(prices);\n\n  return (\n    <div>\n      <header className=\"header\">\n        <img src=\"/logo.svg\" width=\"60\" height=\"60\" alt=\"Bitcoin Icon\" />{' '}\n        <h1>Bitcoin Market Analyzer</h1>\n      </header>\n\n      <main>\n        <h3>The date range to be analyzed</h3>\n        <div className=\"date-inputs\">\n          <div className=\"input-group\">\n            <label htmlFor=\"fromInput\">Start date</label>\n            <input\n              id=\"fromInput\"\n              type=\"date\"\n              value={toDateInputValue(startTime)}\n              min={MIN_DATE}\n              max={toDateInputValue(INITIAL_END_TIME)}\n              onChange={(e) =>\n                setStartTime(\n                  new Date(e.target.value).getTime() || INITIAL_START_TIME\n                )\n              }\n            />\n          </div>\n          <div className=\"input-group\">\n            <label htmlFor=\"toInput\">End date</label>\n            <input\n              id=\"toInput\"\n              type=\"date\"\n              value={toDateInputValue(endTime)}\n              min={MIN_DATE}\n              max={toDateInputValue(INITIAL_END_TIME)}\n              onChange={(e) =>\n                setEndTime(\n                  new Date(e.target.value).getTime() || INITIAL_END_TIME\n                )\n              }\n            />\n          </div>\n        </div>\n\n        <div className=\"cards\">\n          <div className=\"card\">\n            <h3>Longest bearish trend</h3>\n            <p class=\"card-focal\">{longestBearishTrend.trendLength} days</p>\n            <p>\n              {longestBearishTrend.startDate} - {longestBearishTrend.endDate}\n            </p>\n          </div>\n          <div className=\"card\">\n            <h3>Highest trading volume</h3>\n            <p class=\"card-focal\">\n              {highestTradingVolume.volume\n                .toFixed(0)\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')}{' '}\n              €\n            </p>\n            <p>{highestTradingVolume.date}</p>\n          </div>\n          <div className=\"card\">\n            <h3>Maximum profit</h3>\n            <p class=\"card-focal\">{maximumProfit.profit.toFixed(2)} € / BTC</p>\n            <div>\n              {maximumProfit.buyDate ? (\n                <div>\n                  <p>\n                    If Bitcoins were bought on{' '}\n                    <time>{maximumProfit.buyDate}</time> and sold on{' '}\n                    <time>{maximumProfit.sellDate}</time>\n                  </p>\n                </div>\n              ) : (\n                <p>Bitcoin should not be bought on the selected date range</p>\n              )}\n            </div>\n          </div>\n        </div>\n\n        <MarketChart pricesByDate={prices} volumesByDate={volumes} />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","export function longestBearishTrend(pricesByDate) {\n  let result = {\n    startDate: null,\n    endDate: null,\n    trendLength: 0,\n  };\n\n  let startDate, endDate, trendLength;\n\n  Object.entries(pricesByDate).forEach(([date, price], index, array) => {\n    if (index === 0 || price >= array[index - 1][1]) {\n      startDate = date;\n      trendLength = 0;\n      return;\n    }\n\n    trendLength++;\n    endDate = date;\n\n    if (trendLength > result.trendLength) {\n      result = {\n        startDate,\n        endDate,\n        trendLength,\n      };\n    }\n  });\n\n  return result;\n}\n\nexport function highestTradingVolume(volumesByDate) {\n  let result = {\n    date: null,\n    volume: 0,\n  };\n\n  function highestVolumeReducer(result, [date, volume]) {\n    return volume > result.volume ? { date, volume } : result;\n  }\n\n  return Object.entries(volumesByDate).reduce(highestVolumeReducer, result);\n}\n\nexport function maximumProfit(pricesByDate) {\n  let result = {\n    buyDate: null,\n    sellDate: null,\n    profit: 0,\n  };\n\n  let buyDate, minimumPrice;\n\n  Object.entries(pricesByDate).forEach(([date, price], index) => {\n    if (index === 0 || price < minimumPrice) {\n      minimumPrice = price;\n      buyDate = date;\n      return;\n    }\n\n    const profit = price - minimumPrice;\n\n    if (profit > result.profit) {\n      result = {\n        buyDate,\n        sellDate: date,\n        profit,\n      };\n    }\n  });\n\n  return result;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}